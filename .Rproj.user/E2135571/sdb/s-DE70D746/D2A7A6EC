{
    "contents" : "# User interface for simulation-based statistical power calculator app\n# For starters, pulled UI code from https://github.com/rstudio/shiny-examples/blob/master/051-movie-explorer/ui.R\nlibrary(shiny)\nlibrary(shinyapps)\nshinyUI(fluidPage(\n  titlePanel(\"Experimental Design Power Calculator\"), # Simulation-Based Statistical \n{ \n  wellPanel(\n    fluidRow(\n      column(3, \n        h4(\"Study Design\"),\n        radioButtons(inputId = \"design\",\n                     label = NULL,\n                     choices = c(\"RCT/Difference Between Groups\",\n                                 \"Single Population Estimate (inactive)\",\n                                 \"LQAS (inactive)\"), \n                     selected = NULL,\n                     inline = FALSE),\n        checkboxInput(inputId = \"clusterDesign\",\n                      label = \"Clustered study design?\",\n                      value = TRUE)\n      ),\n      column(3,\n        h4(\"Outcome Type\"),\n        radioButtons(inputId = \"outcomeType\",\n                     label = NULL,\n                     choices = c(\"Continuous\",\n                                 \"Binary (inactive)\",\n                                 \"Count (inactive)\"),\n                     selected = NULL,\n                     inline = FALSE)\n      ),\n      column(3,\n        h4(\"Longitudinal Design (inactive)\"),\n        checkboxInput(\"longDesign\", \"Longitudinal study design?\", value = F),\n        conditionalPanel(\n          condition = \"input.longDesign == true\",\n          numericInput(\"long.followups\", \"Number of follow-ups\", 1, min = 1, max = 10),\n          sliderInput(\"long.ICC\", \"ICC for longitudinal measures\", min = 0.0, max = 1.0, step = 0.01, value = 0.25)\n        )\n      )\n    )\n  )\n}, # This is the header control panel\n  #br(), hr(), br(),\n  fluidRow(\n{\n    column(3,\n      wellPanel(\n        h4(\"Power parameters\"),\n        sliderInput(\"alpha\", HTML(\"Alpha (&alpha;)\"), 0.05, min = 0.01, max = 0.1, step = 0.01),\n#         numericInput(\"n.iter\", \"Number of Simulation Iterations\", 10, min = 1)\n        numericInput(\"resid.var\", \"Residual variation\", 1.0,  min = 0.01,   max = 10.0),\n        #tags$div(title = withMathJax(\"The equation for ICC is: $$\\\\frac{\\\\sigma^2_{Between}}{\\\\sigma^2_{Total}}$$\"), # \n        conditionalPanel(condition = \"input.clusterDesign == true\",\n          sliderInput(\"cluster.ICC\", \"\", label = \"Intra-Cluster Correlation (ICC)\", min = 0, max = 1, step = 0.01, value = 0.25),\n          p(\"ICC is the fraction of the total individual variance that is attributable to between-cluster variance. An ICC=0\n            approximates an individually randomized controlled study. The larger the ICC is, the more important cluster\n            differences are in individual outcomes.\")\n            #withMathJax(\"The equation for ICC is: $$\\\\frac{\\\\sigma^2_{Between}}{\\\\sigma^2_{Total}}$$\")\n        )\n      ),\n      conditionalPanel(condition = \"input.clusterDesign == true\",\n        wellPanel(\n          p(actionButton(\"updateCalc\", \"Update calculation\", icon(\"bolt\"))),\n          h4(\"Specify Request\"),\n          selectInput(inputId = \"clusterRequest\",\n                      label = \"What relationship do you need to explore?\",\n                      choices = c(\"cluster size vs. # clusters\",\n                                  \"power vs. effect size\",\n                                  \"effect size vs. cluster size\",\n                                  \"effect size vs. # clusters\"),\n                      selected = \"power vs. effect size\"),\n          conditionalPanel(condition = \"input.clusterRequest == 'cluster size vs. # clusters'\",\n            numericInput(inputId = \"power\",\n                         label   = \"Power\",       0.8, min = 0.0, max = 1.0),\n            numericInput(\"effect.size\", \"Effect size\", 0.5, min = 0,   max = 4)\n          ),\n          conditionalPanel(condition = \"input.clusterRequest == 'power vs. effect size'\",\n            numericInput(\"cluster.size\", \"Sample size per cluster\", 50, min = 1, max = 1000),\n            numericInput(\"cluster.num\",  \"Number of clusters\",      20, min = 1, max = 100)\n          ),\n          conditionalPanel(condition = \"input.clusterRequest == 'effect size vs. cluster size'\",\n            numericInput(\"power\",       \"Power\",              0.8, min = 0.0, max = 1.0),\n            numericInput(\"cluster.num\", \"Number of clusters\", 20,  min = 1,   max = 100)\n          ),\n          conditionalPanel(condition = \"input.clusterRequest == 'effect size vs. # clusters'\",\n            numericInput(\"power\",        \"Power\",                   0.8, min = 0.0, max = 1.0),\n            numericInput(\"cluster.size\", \"Sample size per cluster\", 50,  min = 1,   max = 1000)\n          )\n        )\n      ),\n      conditionalPanel(condition = \"input.clusterDesign == false\",\n        wellPanel(\n          p(actionButton(\"updateCalc\", \"Update calculation\", icon(\"bolt\"))), # look here for all icons - http://fontawesome.io/icons/\n          h4(\"Specify Request\"),\n          selectInput(inputId = \"indvRequest\",\n                      label = \"What relationship do you need to explore?\",\n                      choices = c(\"power vs. sample size\",\n                                  \"power vs. effect size\",\n                                  \"effect size vs. sample size\"),\n                      selected = \"power vs. effect size\"),\n          conditionalPanel(condition = \"input.indvRequest == 'power vs. sample size'\",\n            numericInput(inputId = \"effect.size\",\n                         label = \"Effect size\",\n                         value = 0.5,\n                         min = 0,\n                         max = 4)\n          ),\n          conditionalPanel(condition = \"input.indvRequest == 'power vs. effect size'\",\n            numericInput(inputId = \"sample.size\",\n                         label = \"Sample size\",\n                         value = 50,\n                         min = 1,\n                         max = 1000)\n          ),\n          conditionalPanel(condition = \"input.indvRequest == 'effect size vs. sample size'\",\n            numericInput(inputId = \"power\",\n                         label = \"Power\",\n                         value = 0.8,\n                         min = 0.0,\n                         max = 1.0)\n          )\n        )\n      )\n#       wellPanel(\n#         h4(\"Treatment Parameters\"),\n#         sliderInput(\"baseline.prev\", \"Prevalence under control conditions\",   min = 0, max = 1, step = 0.01, value = 0.8),\n#         selectInput(\"trtSpec\", \"Method of entering treatment effect\", c(\"Prevalence\", \"Odds Ratio\")),\n#         conditionalPanel(\n#           condition = \"input.trtSpec == 'Prevalence'\",\n#           sliderInput(\"trt.prev\", \"Prevalence under treatment conditions\", min = 0, max = 1, step = 0.01, value = c(0.6, 0.8)),\n#           numericInput(\"trt.vals.num\",  \"Number of values to test in this range\", 5, min = 0, max = 100),\n#           p(\"Prevalence under control conditions can be estimated using either baseline values pilot data or the literature.\n#             Prevalence number treatment is the estimated minimum prevalence you want to detect.\")\n#         ),\n#         conditionalPanel(\n#           condition = \"input.trtSpec == 'Odds Ratio'\",\n#           sliderInput(\"or.list\", \"Odds ratio\", min = 0, max = 1, step = 0.01, value = c(0.75, 1.00)),\n#           numericInput(\"or.vals.num\",  \"Number of values to test in this range\", 5, min = 0, max = 100), \n#           p(\"The odds ratio represents the treatment effect--relative to baseline--that you want to detect.\") #, where values below zero represent a protective effect, and those above zero represent detrimental effects.\n#         )\n#       )\n    )\n}, # This is the left-hand control panel\n    column(6,\n      plotOutput(\"plotOut\")\n    )\n#     ,column(2,\n#       tableOutput(\"table\"),\n#       downloadButton('downloadData', 'Download table of results'),\n#       textOutput(\"cores\"),\n#       textOutput(\"iter\")\n#     )\n  )\n))\n",
    "created" : 1437106965981.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1210814789",
    "id" : "D2A7A6EC",
    "lastKnownWriteTime" : 1437105962,
    "path" : "~/GitHub/sim-based-power-calculator/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}